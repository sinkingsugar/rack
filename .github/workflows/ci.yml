name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-macos:
    name: Test on macOS
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable

    - name: Build C++ with CMake
      run: |
        cd rack-sys
        mkdir -p build
        cd build
        cmake -DBUILD_TESTS=ON ..
        make

    - name: Run C++ tests
      run: |
        cd rack-sys/build

        echo "Running scanner tests..."
        scanner_output=$(./rack_sys_test_scanner)
        echo "$scanner_output"
        # Verify that plugins were actually found
        if ! echo "$scanner_output" | grep -qE "Found [1-9][0-9]* plugin\(s\)"; then
          echo "ERROR: No plugins found or scanner test failed"
          exit 1
        fi
        echo "✓ Scanner test passed and plugins were discovered"

        echo ""
        echo "Running instance tests..."
        instance_output=$(./rack_sys_test_instance)
        echo "$instance_output"
        # Verify that all tests completed
        if ! echo "$instance_output" | grep -q "All tests completed!"; then
          echo "ERROR: Instance test failed"
          exit 1
        fi
        echo "✓ Instance test passed"

    - name: Build Rust library
      run: cargo build --verbose

    - name: Run Rust tests
      run: cargo test --verbose

    - name: Build all examples
      run: |
        echo "Building all examples..."
        cargo build --example list_plugins --verbose
        cargo build --example load_plugin --verbose
        cargo build --example process_audio --verbose
        cargo build --example simple_synth --verbose
        cargo build --example cpal_host --verbose --features cpal
        cargo build --example plugin_gui --verbose
        echo "✓ All examples built successfully"

    - name: Run list_plugins example
      run: |
        output=$(cargo run --example list_plugins 2>&1)
        exit_code=$?
        echo "$output"
        if [ $exit_code -ne 0 ]; then
          echo "ERROR: list_plugins example failed"
          exit 1
        fi
        echo "✓ list_plugins example completed successfully"

    - name: Run load_plugin example
      run: |
        output=$(cargo run --example load_plugin 2>&1)
        exit_code=$?
        echo "$output"
        if [ $exit_code -ne 0 ]; then
          echo "ERROR: load_plugin example failed"
          exit 1
        fi
        if ! echo "$output" | grep -q "Plugin initialized successfully"; then
          echo "ERROR: Plugin was not initialized successfully"
          exit 1
        fi
        echo "✓ load_plugin example completed successfully"

    - name: Run process_audio example
      run: |
        output=$(cargo run --example process_audio 2>&1)
        exit_code=$?
        echo "$output"
        if [ $exit_code -ne 0 ]; then
          echo "ERROR: process_audio example failed"
          exit 1
        fi
        if ! echo "$output" | grep -q "Audio processing complete"; then
          echo "ERROR: Audio processing did not complete"
          exit 1
        fi
        echo "✓ process_audio example completed successfully"

    - name: Run simple_synth example
      run: |
        output=$(cargo run --example simple_synth 2>&1)
        exit_code=$?
        echo "$output"
        if [ $exit_code -ne 0 ]; then
          echo "ERROR: simple_synth example failed"
          exit 1
        fi
        if ! echo "$output" | grep -q "Synthesis complete"; then
          echo "ERROR: Synthesis did not complete"
          exit 1
        fi
        echo "✓ simple_synth example completed successfully"
